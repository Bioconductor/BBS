===============================================================================
Things to install to have the builds up and running
-------------------------------------------------------------------------------


From the Administrator account
------------------------------

** Install Google Chrome

** Install Python 2.7 (for all users)
  - using Windows x86-64 MSI installer from
    https://www.python.org/downloads/release/python-2712/
  - make sure 'Add python.exe to Path' is selected

** Upgrade to the latest pip with:
    python -m pip install --upgrade pip

** Install Python modules win32api (or pywin32) and psutil

  Download latest 64-bit version of these modules for Python 2.7 from
  Christoph Gohlke's "Unofficial Windows Binaries for Python Extension
  Packages" page at http://www.lfd.uci.edu/~gohlke/pythonlibs/
    pywin32: pywin32-220.1-cp27-cp27m-win_amd64.whl
    psutil: psutil-4.3.0-cp27-cp27m-win_amd64.whl

  Then:
    pip install pywin32-220.1-cp27-cp27m-win_amd64.whl
    pip install psutil-4.3.0-cp27-cp27m-win_amd64.whl

Note that installing Python from one of the personal administrator accounts
below seems to cause problems (e.g. trying to upgrade to the latest pip
with the above command raises an error). This is why all the above steps
should be done from the Administrator account.

** Create personal administrator accounts:

  Go in Computer Management
        -> System Tools
           -> Local Users and Groups
              -> Users
  Then in Actions (right panel):
        -> Users
           -> More Actions
              -> New User

  Username: mtmorgan
  Full name: Martin Morgan

  Username: hpages
  Full name: Hervé Pagès
  
  Username: aoles
  Full name: Andrzej Oleś

  For all these accounts:
    [x] User must change password at next logon
    [ ] User cannot change password
    [ ] Password never expires
    [ ] Account is disabled

  Then make these users members of the Administrators group.

From now on, all administrative tasks should be performed from one of the
personal accounts instead of the Administrator account.

** Create the biocbuild account:

  Username: biocbuild

  For this account:
    [ ] User must change password at next logon
    [x] User cannot change password
    [x] Password never expires
    [ ] Account is disabled

** Make the biocbuild user member of the Remote Desktop Users group.

** Grant the biocbuild user "Log on as batch job" rights

  (This is needed in order to define scheduled tasks run by the biocbuild
  user.)

  Go in Local Security Policy
  -> Local Policies
     -> User Rights Assignment
  In the right pane, right-click on 'Log on as a batch job' -> Properties
  Add biocbuild user


From a personal administrator account
-------------------------------------

** Install MiKTeX

  Choose the Basic MiKTeX 64-bit Installer

  - Install MiKTeX for all users
  - Preferred paper: Letter
  - Install missing packages on-the-fly: Yes

  Run MiKTeX Update (Admin) in the Windows start menu

  Set environment variable MIKTEX_ENABLEWRITE18=t (this is for packages using
  auto-pst-pdf in their vignette). Not clear that this actually helps with
  recent versions of Windows/MiKTeX. See below ("Turn on write18 for a few
  MiKTeX applications") for an alternative that actually seems to help.

** Install Pandoc

  Go to http://pandoc.org/installing.html#windows
  Download and run the installer

** Install 32-bit Cygwin

  Cygwin is needed for the ssh, rsync, and curl commands only.

  Download and run setup-x86.exe to install or update Cygwin.
  Install for all users.
  Make sure packages openssh, rsync, and curl are selected (the 3 of them
  are in the Net category).

  Note that this installs the Cygwin 32-bit DLL.

** Prepend C:\cygwin\bin to PATH

  To edit an environment variable:

    Windows start menu -> This PC -> right-click on This PC -> Properties
    -> Advanced system settings -> Environment Variables... 

  Test by opening a PowerShell window and try to run ssh, rsync, or curl in
  it.

** Install Rtools

  Download Rtools*.exe from https://CRAN.R-project.org/bin/windows/Rtools/
  For the devel builds: choose the latest version (NOT frozen)
  For the release builds: choose the latest *frozen* version

  On the Select Components page: select everything *except* Cygwin DLLs
  and the "Extras" files

  On the Select Additional Tasks page: select everything

  On the System Path page: add c:\Rtools\mingw_64\bin; right after
  c:\Rtools\mingw_32\bin;

  Test by opening a PowerShell window and try to run:
    which rsync (should show /cygdrive/c/Rtools/bin/rsync, because rsync from
                 Rtools is before Cygwin rsync in PATH)
    which ssh   (should show /usr/bin/ssh)
    which curl  (should show /usr/bin/curl)
    rsync       (will crash if 64-bit Cygwin was installed instead of 32-bit)
    which gcc   (should show /cygdrive/c/Rtools/mingw_32/bin/gcc)

** Install git client for Windows

  Available at https://git-scm.com/download/win
  Keep all the default settings when running the installer.

  Test by opening a PowerShell window and try to run 'git --version'

** [OPTIONAL] Install TortoiseSVN (Subversion client for Windows)

  Just a convenience for checking out some individual BioC packages for
  troubleshooting.

  Available at https://tortoisesvn.net/
  Choose 64-bit version
  When running the installer, make sure the command line clients tools are
  selected (by default they're NOT -- choose 'Entire feature will be installed
  on local hard drive').

  Test by opening a PowerShell window and try to run 'svn --version'


From the biocbuild account
--------------------------

In a PowerShell window:

** Install biocbuild RSA private key

  From C:\Users\biocbuild, create the .BBS/id_rsa file as follow

  - mkdir .BBS
  - cd .BBS
  - Use vi (included in Cygwin) to create the id_rsa file (copy/paste its
    content from another Windows builder e.g. moscato1)
  - chmod 400 id_rsa

  Having the RSA key installed allows the biocbuild user to ssh to the central
  node. Test this with e.g.

    ssh -i C:\Users\biocbuild\.BBS\id_rsa biocbuild@malbec1 -o StrictHostKeyChecking=no

  If malbec1 not in DNS, replace with 172.29.0.3

** Create and populate the bbs-3.4-bioc folder

  From C:\Users\biocbuild, proceed as follow

  - mkdir bbs-3.4-bioc
  - cd bbs-3.4-bioc
  - mkdir log
  - mkdir NodeInfo
  - chmod 755 NodeInfo
  - mkdir tmp
  - mkdir tmpdir

** Install R in bbs-3.4-bioc

  Use CRAN Windows binary that matches BioC devel.
  When running the installer:

  - Select destination location C:\Users\biocbuild\bbs-3.4-bioc\R
  - Don't create a Start Menu Folder
  - Don't create a desktop icon

** Edit some files in the R installation tree

  (Without this, compilation of zlibbioc will fail.)

  The files to edit are: R\etc\i386\Makeconf, R\etc\x64\Makeconf, and
  R\etc\Rprofile.site
  From C:\Users\biocbuild\bbs-3.4-bioc:

  - cd R\etc\i386
  - cp Makeconf Makeconf.original
  - vi Makeconf
      replace
        BINPREF ?= c:/Rtools/mingw_32/bin/
      with
        BINPREF = C:/Rtools/mingw_$(WIN)/bin/

  - cd ..\x64
  - cp Makeconf Makeconf.original
  - vi Makeconf
      replace
        BINPREF ?= c:/Rtools/mingw_64/bin/
      with
        BINPREF = C:/Rtools/mingw_$(WIN)/bin/

  - cd ..
  - cp Rprofile.site Rprofile.site.original
  - vi Rprofile.site
      add the following line at bottom
        Sys.setenv(BINPREF = "C:/Rtools/mingw_$(WIN)/bin/")

  See "Install Ripley's bundle of pre-compiled external software used by some
  packages" below for other edits to do to R/etc/{i386,x64}/Makeconf

** Install BiocInstaller and switch to devel mode (for devel builds only)

  Start R (with R/bin/R from C:\Users\biocbuild), install BiocInstaller and
  switch to devel mode with:

    source("https://bioconductor.org/biocLite.R")
    useDevel()  # only for devel builds

  Quit R (do NOT save the workspace image)

** Test package installation/compilation

  Start R and try to install/compile IRanges, Biobase, and zlibbioc with:

    library(BiocInstaller)
    biocLite("IRanges", type="source")
    biocLite("Biobase", type="source")
    biocLite("zlibbioc", type="source")

  Quit R (do NOT save the workspace image)

** From C:\Users\biocbuild

  git clone https://github.com/Bioconductor/BBS

** Turn on write18 for pdflatex (and maybe for other MiKTeX applications)

  The command below will open an editor. Put EnableWrite18=t in it, save and
  exit:

    initexmf --edit-config-file=miktex\config\pdflatex.ini

  Without this, 'R CMD build' will fail on packages using auto-pst-pdf in
  their vignette (e.g. affyContam, arrayMvout, ArrayTools, BrainStars, clst,
  clstutils, GeneAnswers, GGBase, GGtools, lumi, maSigPro, MassArray,
  PAnnBuilder, parody, PLPE, ppiStats, randPack, rbsurv, rnaSeqMap, vtpnet,
  xmapbridge). With the following error:

    LaTeX errors:
    df.sty:134: Package auto-pst-pdf Error:
        "shell escape" (or "write18") is not enabled:
        auto-pst-pdf will not work!


From a personal administrator account
-------------------------------------

** Add nightly builds to Task Scheduler

  Open Task Scheduler
  In the right pane (Actions) click on Enable All Tasks History
  In the left pane create new BBS folder next to Microsoft folder
  Right-click on the BBS folder -> choose Create Task
  - Tab General:
      Name: bbs-3.4-bioc
      In Security options:
        Use TOKAY1\biocbuild account to run the task
        Run whether user is logged on or not
      Configure for Windows Server 2012 R2
  - Tab Triggers:
      New Trigger
      Begin the task on a schedule
      In Settings:
        Daily - At 7:55 PM - Recur every 1 day
      In Advanced Settings:
        nothing should be checked except 'Enabled'
  - Tab Actions:
      New Action
      Action: Start a program
      In Settings:
        Program/script: C:\Users\biocbuild\BBS\3.4-RPCI\bioc\tokay1\run.bat
        Add arguments: >> C:\Users\biocbuild\bbs-3.4-bioc\log\tokay1.log 2>&1
        Start in: C:\Users\biocbuild\BBS\3.4-RPCI\bioc\tokay1
  - Tab Conditions:
      nothing to do (keep all the defaults)
  - Tab Settings:
      nothing should be checked except 'Allow task to be run on demand'


===============================================================================
Additional things to install to accomodate packages with special needs
-------------------------------------------------------------------------------


** Install Ripley's bundle of pre-compiled external software used by some
  packages

  Download the latest localXYZ.zip file (e.g. local323.zip) from
    http://www.stats.ox.ac.uk/pub/Rtools/libs.html
  Right-click on the downloaded file, choose 'Extract All...'
  Extract the files to C:\localXYZ

  From C:\Users\biocbuild\bbs-3.4-bioc, set LOCAL_SOFT to C:/localXYZ in
  R/etc/{i386,x64}/Makeconf

  Try to compile a package that uses the GSL e.g. from
  C:\Users\biocbuild\bbs-3.4-bioc\meat (this folder will automatically be
  created after the 1st build run):

    ..\R\bin\R CMD INSTALL GLAD
    ..\R\bin\R CMD INSTALL PICS

