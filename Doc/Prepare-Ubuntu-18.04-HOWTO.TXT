===============================================================================
How to set up an Ubuntu 18.04 machine for the daily builds
-------------------------------------------------------------------------------


** From a sudoer account


*** Check system requirements

- At least 1TB of disk space

- At least 20 cores

- At least 32GB of RAM


*** Apply any pending system updates


*** Run Apache server as service


*** Run Xvfb as service

See Prepare-Ubuntu-HOWTO.TXT


*** Install the following

Required stuff:
  gfortran
  g++
  gobjc
  libreadline6-dev
  libx11-dev
  libxt-dev
  tk-dev
  libbz2-dev

Highly recommended stuff (TeX/LaTeX, PNG, JPEG, cairo, Java):
  texlive
  texlive-latex-extra (for fullpage.sty)
  texlive-fonts-extra (for incosolata.sty)
  texlive-bibtex-extra (for unsrturl.bst)
  texlive-science (for algorithm.sty)
  texi2html
  texinfo
  libpng12-dev
  libjpeg-dev
  libtiff5-dev
  libcairo2-dev
  default-jdk
  manpages-dev (includes man pages for the C standard lib)
  ttf-mscorefonts-installer

Needed by some CRAN or BioC packages:
  pandoc (for knitr)
  automake (for RProtoBufLib)
  libssl-dev (for openssl)
  libxml2-dev (for XML)
  libcurl4-openssl-dev (for RCurl)
  libgtk2.0-dev (for RGtk2)
  libnetcdf-dev (for xcms, RNetCDF, etc...)
  graphviz and libgraphviz-dev (for RGraphviz)
  libgsl-dev (for all the packages that depend on the GSL)
  libmysqlclient-dev (for RMySQL)
  libmagick++-dev (for EBImage)
  libpq-dev (for RdbiPgSQL)
  libglu1-mesa-dev (for rgl)
  libhdf5-dev (for ncdfFlow)
  libopenbabel-dev (for ChemmineOB)
  libgmpv4-dev (for gmp)
  libncurses-dev
  jags (for rjags)
  pandoc-citeproc (for dagLogo)
  libmpfr-dev (for Rmpfr)
  libudunits2-dev (for ggraph)
  libv8-3.14-dev (for DiagrammeRsvg)
  libapparmor-dev (for sys)
  protobuf-compiler (for protolite)
  libpq-dev (for RPostgreSQL)
  ocl-icd-opencl-dev (for gpuMagic)


*** Create the biocbuild account


*** Standalone vs non-standalone builder

The machine could either be configured as a standalone builder or as
a central builder, that is, as a build node that collects build products
from other build nodes (e.g. from nodes located in Buffalo or MacStadium).

Using the machine as a central builder will generate a lot of data transfer
back and forth with the other builders (> 1GB every day on normal days).
So before we start using the machine as a central builder, we'll need to
make sure that we have good connectivity/bandwidth with the other build
nodes.



** From the biocbuild account


*** Install biocbuild RSA private key


*** Create directory structure in biocbuild account


*** Install R


*** Clone BBS code


*** Configure BBS


*** Add crontab entries for nightly builds


*** Let the first build run



** After first build run has completed


*** Install missing deps

Use first build/check report to indentify what's missing.


*** Turn on write18 for pdflatex (and maybe for other MiKTeX applications)

  The command below will open an editor. Put EnableWrite18=t in it, save and
  exit:

    initexmf --edit-config-file=miktex\config\pdflatex.ini

  Without this, 'R CMD build' will fail on packages using auto-pst-pdf in
  their vignette (e.g. affyContam, arrayMvout, ArrayTools, BrainStars, clst,
  clstutils, GeneAnswers, GGBase, GGtools, lumi, maSigPro, MassArray,
  PAnnBuilder, parody, PLPE, ppiStats, randPack, rbsurv, rnaSeqMap, vtpnet,
  xmapbridge). With the following error:

    LaTeX errors:
    df.sty:134: Package auto-pst-pdf Error:
        "shell escape" (or "write18") is not enabled:
        auto-pst-pdf will not work!

