After a fresh Snow Leopard install, here are a few things that need to be done
in order to help BBS run smoothly:
--all the below is not yet updated--

Make sure Carl receives syslog messages:

http://wiki.splunk.com/Community:HowTo_Configure_Mac_OS_X_Syslog_To_Forward_Data

Basically all you have to do is add a line to /etc/syslog.conf

*.* @140.107.170.145

and restart the syslogd service. Rebooting also would complete it.


o Install Xcode 4.2 for Snow Leopard which is difficult to obtain
  online so we store a copy here:
  /fh/fast/morgan_m/BioC/BBS/xcode_4.2_for_snow_leopard.dmg
  Note that you may need to change the date in order to install this; 
  I ran into this problem, tried this solution and it worked:
  http://apple.stackexchange.com/questions/45841/xcode-4-2-snow-leopard-doesnt-install
  (change the system date to 1/1/2012 before attempting to install; after
  installing change it back.)

o Download and install latest X11 2.7.4 from the XQuartz
  project:
    http://xquartz.macosforge.org/trac/wiki
  This should install X11.app in /Applications/Utilities and create
  symlink X11R6 -> X11 in /usr.
  Log out and log back in, then start XQuartz and test it with
  xeyes. 

o Check default compilers. Must be gcc 4.2, not 4.0 (both shipped with Xcode).
  Modify symlinks in /usr/bin to change the default compilers.

o Install Simon's Fortran compiler  from here
    http://cran.fhcrc.org/bin/macosx/tools/

o Install R. Use CRAN official binary for release or Simon's latest devel build
  from http://r.research.att.com/ for devel.
  Run the usual leopard-R-fix-flags.sh (this should be copied to
  snow-leopard-R-fix-flags.sh) in  /Library/Frameworks/R.framework/Resources/etc/
  Then make an additional change to Makeconf:

35c35
< FCFLAGS = -mtune=core2 -g -O2 $(LTO)
---
> FCFLAGS = -g -O2 $(LTO)

?????? are we sure? doesn't seem to be needed anymore 

Wait - which package requires this?
(This should be incorporated into the script)


o If we are going to use the clang compiler, as seems to be the plan
  as of April 2013, then create a ~biocbuild/.R/Makevars file containing:

CC=clang
CXX=clang++
CFLAGS="-mtune=native -g -O2 -Wall -pedantic -Wconversion"
CXXFLAGS="-mtune=native -g -O2 -Wall -pedantic -Wconversion"


o Start R. Try X11(), then library(tcltk), then check capabilities().
  Could be that X11() hangs R. This seems to be solved by installing the latest
  X11 from the XQuartz project (see above).

o Install MacTeX. Try to build a package using pstricks + auto-pst-pdf in its
  vignette (e.g. R CMD build affyContam). If it fails, add shell_escape = t
  to /usr/local/texlive/<YYYY>/texmf.cnf
  Put Sweave.sty in ~/Library/texmf/tex/latex and run
  sudo texhash.
  Install texinfo from Simon:
  http://r.research.att.com/libs/texinfo-5.2-darwin10.tar.gz 
  (or whatever is the most recent version)

o Install the GTK+ framework provided by Simon at:
    http://R.research.att.com/libs/
  ?? which one? There are 3. The GTK+ tarball is for "tiger or later". Too old?
  Note that darwin9 is Leopard and darwin10 Snow Leopard.
  Then create symlink:
    pkg-config -> /Library/Frameworks/GTK+.framework/Resources/bin/pkg-config
  in /usr/bin. Try:
    which pkg-config
  Also add:
    export PKG_CONFIG_PATH="/Library/Frameworks/GTK+.framework/Resources/lib/pkgconfig:/usr/lib/pkgconfig:/usr/local/lib/pkgconfig:/usr/X11/lib/pkgconfig"
  to /etc/profile (make a copy as /etc/profile.orginal before modifying).

  Then start R and try:
    > install.packages("RGtk2", type="source")
    > library(RGtk2)
  Finally try R CMD INSTALL HilbertVisGUI
    
o Install graphviz from the official graphviz site. Try 'neato --help'

o Install GSL from:
    http://r.research.att.com/libs/
     (look for gsl-*.tar.gz)
     ?? Not there, however, an old version was on petty
    sudo tar zxf gsl-*.tar.gz -C /
   Make sure any previous installations of GSL have been removed. In particular,
   all /usr/local/lib/libgsl*.dylib files should be removed.
  Try R CMD INSTALL affyILM  

o Install other 3rd party libraries provided by Simon at:
    http://R.research.att.com/libs/
  At least: 
  tiff, libpng, jpeg, readline, freetype, fontconfig, pixman and cairo
  Then start R and try:
    > install.packages("Cairo", type="source")
    > library(Cairo)
    (not sure about this as Cairo is in our special STAGE2 list
    I think it's sufficient to install a binary of Cairo and library() it.)

o Install Simon's ggobi from http://R.research.att.com/libs/
  Add /usr/local/ggobi/lib/pkgconfig to PKG_CONFIG_PATH (in /etc/profile).  
  Try:
    pkg-config ggobi --libs 
  Then start R and try:
    > install.packages("rggobi", type="source")
    > library(rggobi)
    (I think /usr/local/ggobi/lib also needs to be added to DYLD_LIBRARY_PATH
    but I have not confirmed this)

o Install netcdf and hdf5 from these binaries from Simon:
    http://r.research.att.com/libs/hdf5-1.8.8-darwin9-bin3.tar.gz
    http://r.research.att.com/libs/netcdf-4.1.3-darwin9-bin3.tar.gz
  Make sure that any libnetcdf*dylib or libhdf5*dylib files
  in /usr/local/lib (from any previous installation) are moved out
  of the way.

  Then start R and try:
    > install.packages("ncdf", type="source")
    > library(ncdf)
  Then try:
    R CMD INSTALL xcms
    R CMD INSTALL rhdf5
    R CMD INSTALL ncdfFlow

o Install PostgreSQL (the official PostgreSQL website provides links to
  binaries for MacOSX). The "one click" installer from EnterpriseDB requires
  a 2-step installation (with reboot in between). Use biocbuild's password for
  db superuser (postgres).
  Then try:
    pg_config
  NB: EnterpriseDB installer puts everything under /Library/PostgreSQL/ so
  you need to create symlink:
    pg_config -> /Library/PostgreSQL/9.0/bin/pg_config
  in /usr/bin for the above to work. Then start R and try:
    > install.packages("RPostgreSQL", type="source")
    > library(RPostgreSQL)
  
o Install MySQL (MySQL Community Server). Choose "Mac OS X 10.6 (x86, 64-bit(?)),
  DMG Archive" available at http://dev.mysql.com/downloads/mysql/.
  Add:
    export PATH="$PATH:/usr/local/mysql/bin"
  to /etc/profile (make a copy as /etc/profile.orginal before modifying).
  Then try:
    which mysql_config
  Also create symlink:
    mysql -> ../mysql/include
  in /usr/local/include, and create symlinks in /usr/local/lib to all the files
  in /usr/local/mysql/lib. 
  Then add this to /etc/profile:
  export DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:/usr/local/mysql/lib

  Start R and try:
    > install.packages("RMySQL", type="source")
    > library(RMySQL)

o Install Vienna RNA from http://www.tbi.univie.ac.at/~ivo/RNA/. This one needs
  to be compiled/installed from source. Just extract the source tarball, and
  run ./configure, make, sudo make install.
  (use ./configure --without-perl)
  Then try R CMD INSTALL GeneGA
  (GeneGA makes a system() call to a ViennaRNA executable but
  does not link to ViennaRNA libraries, so make sure
  the 'RNAfold' executable is present and working).

o Install libSBML from http://sbml.org/Software/libSBML. rsbml requires
  libSBML version 3 so I downloaded libsbml-3.4.1-src.zip
  from http://sourceforge.net/projects/sbml/files/libsbml/3.4.1/
  (libsbml-3.4.1-libxml2-macosx.dmg in that folder doesn't include libsbml.pc
  or the header files, this is why we install from source).
  This line in Makefile.in seems to be a bug:
    @echo "Requires: libxml-2.0 >= 2.6.22" >> libsbml.pc
  since in the documentation and many other places it is consistently said
  that versions of libxml-2.0 as old as 2.6.16 are supported (which is the
  default version on Leopard and Snow Leopard). So fix Makefile.in.
  Then run ./configure, make, sudo make install.
  Then try:
    pkg-config libsbml --modversion
    pkg-config libsbml --libs

  Then add this to /etc/profile:
  export DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:/usr/local/lib

  Finally try R CMD INSTALL rsbml

o Install ROOT. The easiest method is to install a precompiled binary.
  For example download root_v5.34.05.macosx106-x86_64-gcc-4.2.tar.gz (?) (used for
  BioC 2.12) from ftp://root.cern.ch/root/. Note that the compiler used to
  produce this binary (gcc 4.0) doesn't match exactly the default compilers
  (gcc 4.2) but that doesn't seem to prevent the xps package from compiling
  and running.
  (If we switch to using the clang compiler, we will probably want to use
  a version of ROOT that is built under clang, for example one of these:
  ftp://root.cern.ch/root/root_v5.34.02.macosx64-10.7-i386.tar.gz
  ftp://root.cern.ch/root/root_v5.34.05.macosx64-10.8-i386.tar.gz
  )
  
  Alternatively, if there is no binary for Snow Leopard (e.g. for root 5.30.00),
  install from source with:
    ./configure macosx --disable-tmva --prefix=/usr/local/root
    make -j2  # takes a while!
    sudo make install
  Then add /usr/local/root/bin to PATH (in /etc/profile).
  Then try:
    which root-config
  Finally try R CMD INSTALL xps
  Note: The xps maintainer would like us to use ROOT version 5.32/01 or newer.

o Install ImageMagick from source. Binary tarballs seem broken.
  The easiest way is to copy the script in this directory,
  install-imagemagick.sh, to a clean directory and run it as follows:
  sh install-imagemagick.sh
 You can loosely follow the instructions here:
   https://discussions.apple.com/thread/2420703?start=0&tstart=0
  But bear in mind that you already installed libjpeg and libpng above, 
  so you don't need to do those steps. The CPPFLAGS and LDFLAGS can 
  be less complex than illustrated in this page; I used:

   export LDFLAGS="-L/usr/local/lib -lpng"
   export CPPFLAGS="-I/usr/local/include"
  Some versions of ImageMagick are broken, for example 6.7.3-1
  doesn't work with the flowQ package. I had better luck with 
  version 6.6.1-3.
  Make sure both the 'convert' and 'identify' executables
  are available; this may require manual installation.
  (UPDATE THIS)

o If there are problems with packages that use GLX (that is, library(rgl)
  fails), try using the version of the Xvfb executable that is on perceval.
  The problem (described here: 
  http://lists.apple.com/archives/x11-users/2012/Dec/msg00056.html
  ) was solved on 12/21/2012 by copying the Xvfb executable from 
  perceval to petty. The executable that 'works' is backed up on
  /shared/silo_researcher/Morgan_M/BioC/BBS
  as 'Xvfb', and the one that
  is backed up (did not work) is in the same location as
  'Xvfb.bak.20121221'
  (Don't know if this will work, or if there is still a problem,
  in Snow Leopard)

o Install the Variant Effect Predictor as described in the README
  of ensemblVEP. Then run
  R CMD build ensemblVEP
  to see if it works.


o Set locale by adding this to /etc/profile:
export LC_ALL=en_US.UTF-8  
  If that doesn't work, add it to nodes/NODENAME/local-settings.sh.
  
o Install openmpi per this page:
https://wiki.helsinki.fi/display/HUGG/Installing+Open+MPI+on+Mac+OS+X
  The configure command should be:
  CFLAGS="-m64"  CXXFLAGS="-m64"  FFLAGS="-m64" ./configure --prefix=/usr/local

