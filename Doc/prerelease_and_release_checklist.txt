Throughout the process we should be testing the latest binary packages with
the upcoming release with R RC or R PRERELEASE on a clean Windows and Mac machine.
It's important to use these binary R installations:

Windows:

  http://cran.fhcrc.org/bin/windows/base/

Mac:

  http://cran.fhcrc.org/bin/macosx/

A "clean" machine means, on Windows, no Rtools, LaTeX, etc.
On Mac it means no Xcode and do not use Simon U's builds, use the one above.

We should test with both the GUI and command-line versions of R.
One specific thing to test is that the impute, DNAcopy, and NuPoP
packages can be loaded on a Mac in the R GUI. If they can't, the
links in the .so files are not being fixed properly.

During this process, we want to watch every day for new R versions
(RC, prerelease,etc) and install them on our devel build systems.

=====================================================================
Some important operations that need to happen before a BioC release,
in _this_ order

One month before the release:

 - Think about which machines to use for the new devel.
   Are hardware or OS upgrades required? If so, you'll need more time.
   If you are going to use the same machine(s) for new devel as you
   used for old release, stop old release builds several weeks
   before the release date, to give you enough time to set up
   the machine(s) for new devel builds. The date that
   old release builds are stopped should go in the release
   schedule.

- Think about changing BiocInstaller and the
  /developers/howto/useDevel web page. Update the man
  page for useDevel() accordingly, correcting R/Bioc version
  numbers and noting whether an R upgrade is required
  in order to use bioc-devel.

A few days before the new release:

- make a snapshot of CRAN and make it available as an (optional)
  repository

- Remove from the manifest of the to-be-released version of BioC all packages
  which were deprecated in a previous release
  cycle (grep -i deprecated */R/zzz.R).

- Stop the old release builds.
- IMPORTANT: After stopping release builds, on all Mac build machines, point
  the "Current" symlink in /Library/Frameworks/R.framework/Versions to the
  new DEVEL version of R. Otherwise we will be producing broken binaries!
  (Not applicable if only one build is running on each Mac machine, as should
  be the case from BioC 2.9 onward; but we do want to make sure that there is
  only ever one version of R installed on these Mac build machines.)

  Also, after stopping release builds, you'll disable commits to the release
  branch. But make sure that the 'anon' user can still read from this branch.
  The website build process depends on this!

- Until the next devel builds are running, we want symlinks pointing to the old
  devel builds so that the BiocInstaller package will work.
  This includes the software, data/annotation, and data/experment repositories.
  Remove these symlinks when the builds start running.

- ASK package maintainers to finalize their NEWS files for inclusion in the release
  announcement. Then after the deadline for that, compile the NEWS using
  biocViews:::getPackageNEWS().

- PREPARE BiocInstaller package for upcoming release.

- FIX bioconductor.authz on hedgehog (all the paths to the release
 versions of the pkgs need to be updated).

- FLUSH the internal software repo (~biocadmin/PACKAGES/x.y/bioc)
 of the upcoming release.

- Setup the next devel builds + repositories
   - A minor thing (as a reminder) - make sure that the R
     that runs as biocadmin has the 'knitcitations' package
     installed.

- Install the latest biocViews from svn into the R on merlot2
  (in /home/biocadmin/bin/R), so that it will be using the latest biocViews
  package when generating the biocViews widget.

- Also install the latest biocViews into the R on the master builder
  (for the version about to be released) in the 'biocadmin' account.

The day before we branch (D-2):

- Create new manifest file. If "new" devel builds have started,
  make sure they use this new manifest file.


The day we branch (D-1):

- If a new R is released today, modify the biocLite.R
  script (which lives in the BiocInstaller package in
  inst/scripts)to make sure the next devel version of
  R is properly identified.

- Send mail to Bioc-devel to ask people to not commit for the next
 2 hours while we create the new branch in svn.

- Note that we now (as from 12/13) want to branch and bump
  experiment data packages in the same way as software packages
  so note that **THE STEPS BELOW SHOULD APPLY TO BOTH
  SOFTWARE AND EXPERIMENT DATA PACKAGES**.

  NOTE: Just to be explicit, we bump experiment data packages
  **EXACTLY** the same way as software packages. That is, we bump
  y to the next even number in release and to the next odd
  number in devel. For a while we were doing it a different
  way but no longer. Make sure you do it the same way
  as the software packages!

  One thing that must
  be done with experiment data packages is to branch them
  (at the top level of https://hedgehog.fhcrc.org/bioc-data)
  and make sure that the add_data.py script in branches/RELEASE_X_XX/pkgs
  contains a URL with the appropriate branch.

- FIRST VERSION BUMP: bump version of devel pkgs (in trunk)
 that are in the manifest file of the upcoming release.
 Scripts for bumping can be found here:
 https://hedgehog.fhcrc.org/bioconductor/trunk/bioC/admin/util/

- CREATE THE BRANCH FOR THE RELEASE in svn.

- SECOND VERSION BUMP: bump again version of devel pkgs (in trunk)
 that are in the manifest file of the upcoming release.

- Send mail to Bioc-devel to announce the creation of the branch
 and tell people that they can resume commits (provide URL to the
 new branch, clarify the difference between the release and
 the devel version of a package).

- Make the release builds extract the meat from the new branch in svn.

- In trunk, change R/zzz.R of the BiocInstaller package to indicate new
  BioC version number.

- Change DESCRIPTION file of BiocInstaller to depend on latest devel
  version of R (if that is appropriate).

- Run a script to generate recent NEWS for all packages, to be included
  in the release announcement. (biocViews:::getPackageNEWS.R()).
  Verify that there are no <NA>s in output. Collate package descriptions
  with biocViews:::getPackageDescriptions().

- Set up git mirrors (if they still exist?) with the new branch.
  read https://github.com/Bioconductor/mirror/blob/master/README.md#release-workflow
  Alternatively try (untested):

    update_git.py --type branches/RELEASE_3_3 --search-revision 123456 package_directories*

The benefit of the latter is specifying a search revision close to the branch point saves having to search from the beginning of the SVN history, so it takes less time. They both end up running basically the same commands so in the end either way should get you the same result.

On release day (D):

- UPDATE the /etc/rsyncd.conf on master.bioconductor.org. The mirroring instructions
 on the website will be updated automatically in the following steps.

- Update config.yaml in the root of the bioconductor.org working copy
  and change values as indicated in the comments. This will (among other
  things), automatically update the website symlinks ("release" and "devel")
  under /packages. After a release you should
  let the no-longer-release version build one last time so package
  landing pages won't say "release version" (and also so the
  BiocInstaller landing page will reflect the version of
  the package that you will push out manually--see the
  "Modify BiocInstaller..." step below).


- Update build report index page and symlinks; remove "devel"
  background image from report.css (if there is one).

- Put release announcement on web and add to pages which contain
  links to all release announcements (/about/release-announcements
  and **/layouts/_release_announcements.html**). Put today's
  date at the top of the web version of the release
  announcement.

- Update build times mentioned on web page
  /developers/how-to/source-control/

- Update the useDevel page as appropriate:
  /developers/how-to/useDevel

- add the last release version to the list of 'Previous Versions'
  (layouts/_bioc_older_packages.html). **DON'T FORGET THIS!**

- Add new AMI to /help/cloud and /help/bioconductor-cloud-ami/
  (use AMI placeholder from config.yaml) Update CloudFormation
  stacks so that the newly released version is the default.

- Link to release announcement on main index page.
  ?? Do we still do this?? Or is tweeting sufficient?

- Update number of packages on main index page.

- Update symlinks ("release" and "devel") under /checkReports

- Update Wikipedia page for Bioconductor

- Update post-commit hook script extra/svndata/gentleman/svnroot/bioconductor/hooks/post-commit
  on hedgehog, changing to the new devel version, search for CHANGEME.

- Edit inst/scripts/BiocInstaller.dcf in BiocInstaller
  to change relevant variables. This will automatically push
  soon after being committed.

- Announce the release.

- Tweet a link to the release announcement.

- Add "Disallow: /packages/XX/" to the web site's robots.txt file
  where XX is the new devel version (one higher than the version)
  that was just released.

- Modify the file /about/removed-packages/ on the web site
  to indicate the packages that were removed with this release.
  Link to the last-good landing page of each package.

- Modify the script
svn@hedgehog:/extra/svndata/gentleman/svnroot/bioconductor/hooks/rssfeed.sh
  Change below where it says "CHANGE THE VALUE IN THE NEXT LINE".
  This causes an rss feed to be generated for the release branch.

- Modify BiocInstaller for the newly obsolete branch (the one before the one
  that was created yesterday, and change END_OF_LIFE to TRUE,
  bump version, then push it out
  for all platforms since builds have stopped. (?)


- Sanity check: Was biocLite.R updated properly? With a fresh R devel
  (make sure BiocInstaller is not installed), source biocLite.R and
  make sure the appropriate version is installed. Of course, do the same
  with release.  ** really do this! with R-devel too if appropriate! **

- Make sure that the BiocInstaller package is manually pushed out
  to the new devel repos. It has to be manually pushed out because
  otherwise it will fail its unit test because it is testing to make
  sure that BiocInstaller is in the devel repos. A chicken-and-egg situation.

On D + 1:

- Go for a beer.
